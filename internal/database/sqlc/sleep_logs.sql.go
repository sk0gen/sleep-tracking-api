// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: sleep_logs.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createSleepLog = `-- name: CreateSleepLog :one
INSERT INTO sleep_logs (id, user_id, start_time, end_time, quality, created_at)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, user_id, start_time, end_time, quality, created_at
`

type CreateSleepLogParams struct {
	ID        uuid.UUID        `json:"id"`
	UserID    pgtype.UUID      `json:"user_id"`
	StartTime pgtype.Timestamp `json:"start_time"`
	EndTime   pgtype.Timestamp `json:"end_time"`
	Quality   string           `json:"quality"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

func (q *Queries) CreateSleepLog(ctx context.Context, arg CreateSleepLogParams) (SleepLog, error) {
	row := q.db.QueryRow(ctx, createSleepLog,
		arg.ID,
		arg.UserID,
		arg.StartTime,
		arg.EndTime,
		arg.Quality,
		arg.CreatedAt,
	)
	var i SleepLog
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.StartTime,
		&i.EndTime,
		&i.Quality,
		&i.CreatedAt,
	)
	return i, err
}
