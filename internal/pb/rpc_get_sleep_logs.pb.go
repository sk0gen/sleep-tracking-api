// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: rpc_get_sleep_logs.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserSleepLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber int32 `protobuf:"varint,1,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	PageSize   int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetUserSleepLogsRequest) Reset() {
	*x = GetUserSleepLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_get_sleep_logs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSleepLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSleepLogsRequest) ProtoMessage() {}

func (x *GetUserSleepLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_get_sleep_logs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSleepLogsRequest.ProtoReflect.Descriptor instead.
func (*GetUserSleepLogsRequest) Descriptor() ([]byte, []int) {
	return file_rpc_get_sleep_logs_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserSleepLogsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetUserSleepLogsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UserSleepLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Quality   string                 `protobuf:"bytes,4,opt,name=quality,proto3" json:"quality,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *UserSleepLog) Reset() {
	*x = UserSleepLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_get_sleep_logs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSleepLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSleepLog) ProtoMessage() {}

func (x *UserSleepLog) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_get_sleep_logs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSleepLog.ProtoReflect.Descriptor instead.
func (*UserSleepLog) Descriptor() ([]byte, []int) {
	return file_rpc_get_sleep_logs_proto_rawDescGZIP(), []int{1}
}

func (x *UserSleepLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserSleepLog) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UserSleepLog) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *UserSleepLog) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *UserSleepLog) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetUserSleepLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SleepLogs []*UserSleepLog `protobuf:"bytes,1,rep,name=sleep_logs,json=sleepLogs,proto3" json:"sleep_logs,omitempty"`
}

func (x *GetUserSleepLogsResponse) Reset() {
	*x = GetUserSleepLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_get_sleep_logs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSleepLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSleepLogsResponse) ProtoMessage() {}

func (x *GetUserSleepLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_get_sleep_logs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSleepLogsResponse.ProtoReflect.Descriptor instead.
func (*GetUserSleepLogsResponse) Descriptor() ([]byte, []int) {
	return file_rpc_get_sleep_logs_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserSleepLogsResponse) GetSleepLogs() []*UserSleepLog {
	if x != nil {
		return x.SleepLogs
	}
	return nil
}

var File_rpc_get_sleep_logs_proto protoreflect.FileDescriptor

var file_rpc_get_sleep_logs_proto_rawDesc = []byte{
	0x0a, 0x18, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f,
	0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x55, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xe5, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x6c, 0x65, 0x65, 0x70, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4b,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x4c, 0x6f,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x6c,
	0x65, 0x65, 0x70, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x4c, 0x6f, 0x67,
	0x52, 0x09, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x4c, 0x6f, 0x67, 0x73, 0x42, 0x32, 0x5a, 0x30, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6b, 0x30, 0x67, 0x65, 0x6e,
	0x2f, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x2d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_get_sleep_logs_proto_rawDescOnce sync.Once
	file_rpc_get_sleep_logs_proto_rawDescData = file_rpc_get_sleep_logs_proto_rawDesc
)

func file_rpc_get_sleep_logs_proto_rawDescGZIP() []byte {
	file_rpc_get_sleep_logs_proto_rawDescOnce.Do(func() {
		file_rpc_get_sleep_logs_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_get_sleep_logs_proto_rawDescData)
	})
	return file_rpc_get_sleep_logs_proto_rawDescData
}

var file_rpc_get_sleep_logs_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rpc_get_sleep_logs_proto_goTypes = []any{
	(*GetUserSleepLogsRequest)(nil),  // 0: pb.GetUserSleepLogsRequest
	(*UserSleepLog)(nil),             // 1: pb.UserSleepLog
	(*GetUserSleepLogsResponse)(nil), // 2: pb.GetUserSleepLogsResponse
	(*timestamppb.Timestamp)(nil),    // 3: google.protobuf.Timestamp
}
var file_rpc_get_sleep_logs_proto_depIdxs = []int32{
	3, // 0: pb.UserSleepLog.start_time:type_name -> google.protobuf.Timestamp
	3, // 1: pb.UserSleepLog.end_time:type_name -> google.protobuf.Timestamp
	3, // 2: pb.UserSleepLog.created_at:type_name -> google.protobuf.Timestamp
	1, // 3: pb.GetUserSleepLogsResponse.sleep_logs:type_name -> pb.UserSleepLog
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_rpc_get_sleep_logs_proto_init() }
func file_rpc_get_sleep_logs_proto_init() {
	if File_rpc_get_sleep_logs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_get_sleep_logs_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSleepLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_get_sleep_logs_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UserSleepLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_get_sleep_logs_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSleepLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_get_sleep_logs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_get_sleep_logs_proto_goTypes,
		DependencyIndexes: file_rpc_get_sleep_logs_proto_depIdxs,
		MessageInfos:      file_rpc_get_sleep_logs_proto_msgTypes,
	}.Build()
	File_rpc_get_sleep_logs_proto = out.File
	file_rpc_get_sleep_logs_proto_rawDesc = nil
	file_rpc_get_sleep_logs_proto_goTypes = nil
	file_rpc_get_sleep_logs_proto_depIdxs = nil
}
